<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Ian Billett</title><link>https://billett.me/posts/</link><description>Recent content in Posts on Ian Billett</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Â© Ian Billett</copyright><lastBuildDate>Tue, 14 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://billett.me/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>TSDB WTF</title><link>https://billett.me/posts/tsdbwtf/</link><pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate><guid>https://billett.me/posts/tsdbwtf/</guid><description>The TSDB is the beating heart of any instance of Prometheus; it is the storage engine that lets users efficiently store and query billions of data points. However, getting the best out of the TSDB is non-trivial and easy to get wrong.
If we can develop an understanding of how it works under the hood, we can precisely reason about what it is well suited for, and more importantly, what it is not well suited for.</description></item><item><title>PromQL for Mere Mortals</title><link>https://billett.me/posts/promql-for-mere-mortals/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://billett.me/posts/promql-for-mere-mortals/</guid><description>PromQL can feel intimidating at first for those new to the Prometheus ecosystem, but it is an essential skill to learn when starting out monitoring and alerting in the Prometheus ecosystem.
In this beginner-focused, demo-driven talk we will walk through the thought processes, mental models and coping strategies we can use to tame PromQL and effectively query metrics data.
We will demystify instant vector selectors from range vector selectors, understand how aggregate functions work, and, time-permitting, even touch on some PromQL engine internals.</description></item></channel></rss>